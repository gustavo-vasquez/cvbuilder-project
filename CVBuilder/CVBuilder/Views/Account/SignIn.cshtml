@model CVBuilder.ViewModels.Account.SignInViewModel

@{
    ViewBag.Title = "Accede a tu cuenta";
}

<section class="sign-in-account">
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="card border-success mb-3">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Accede a tu cuenta.</h4>
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "user_login_form" }))
                        {
                            @Html.AntiForgeryToken()
                            <fieldset>
                                <div class="form-group">
                                    <label>Correo electrónico</label>
                                    @Html.TextBoxFor(m => m.LoginModel.Email, new { @class = "form-control", placeholder = "Correo electrónico" })
                                    @Html.ValidationMessageFor(m => m.LoginModel.Email, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Contraseña</label>
                                    @Html.TextBoxFor(m => m.LoginModel.Password, new { @class = "form-control", placeholder = "Contraseña" })
                                    @Html.ValidationMessageFor(m => m.LoginModel.Password, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(m => m.LoginModel.RememberMe, new { @class = "custom-control-input" })
                                        <label class="custom-control-label" for="LoginModel_RememberMe">Recordarme</label>
                                    </div>
                                </div>
                            </fieldset>
                            <div class="form-group row">
                                <div class="col-lg-4">
                                    <button type="submit" class="btn btn-default">Ingresar</button>
                                </div>
                                <div class="col-lg-8 text-right">
                                    <a href="#">¿Has olvidado tu contraseña?</a>
                                </div>
                            </div>
                            @Html.ValidationMessage("LoginError", new { @class = "text-danger" })
                        }
                    </div>
                </div>
                <div class="card border-success mb-3">
                    <div class="card-body">
                        <div class="connect-with row">
                            <div class="col-lg-5">
                                <p class="mt-2">Conéctate con:</p>
                            </div>
                            <div class="col-lg-7">
                                <a href="#" title="Cuenta de Google"><i class="fab fa-google"></i></a> <a href="#" title="Cuenta Microsoft"><i class="fab fa-windows"></i></a> <a href="#" title="Cuenta de LinkedIn"><i class="fab fa-linkedin"></i></a> <a href="#" title="Cuenta de Github"><i class="fab fa-github"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card border-success mb-3">
                    <div class="card-body">
                        <h4 class="card-title mb-4">¿Eres nuevo? Regístrate ahora para guardar los cambios de tu CV permanentemente.</h4>
                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "user_register_form" }))
                        {
                            @Html.AntiForgeryToken()
                            <fieldset>
                                <div class="form-group">
                                    <label>Correo electrónico</label>
                                    @Html.TextBoxFor(m => m.RegisterModel.Email, new { @class = "form-control", placeholder = "Correo electrónico" })
                                    @Html.ValidationMessageFor(m => m.RegisterModel.Email, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Contraseña</label>
                                    @Html.TextBoxFor(m => m.RegisterModel.Password, new { @class = "form-control", placeholder = "Contraseña" })
                                    <small class="form-text text-muted">Sólo números y letras, mínimo 6 caracteres.</small>
                                    @Html.ValidationMessageFor(m => m.RegisterModel.Password, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Confirmar contraseña</label>
                                    @Html.TextBoxFor(m => m.RegisterModel.ConfirmPassword, new { @class = "form-control", placeholder = "Confirmar contraseña" })
                                    @Html.ValidationMessageFor(m => m.RegisterModel.ConfirmPassword, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(m => m.RegisterModel.TermsAndServices, new { @class = "custom-control-input" })
                                        <label class="custom-control-label" for="RegisterModel_TermsAndServices">He leído y estoy de acuerdo con los <a href="#">términos de servicio</a>.</label>
                                        @Html.ValidationMessageFor(m => m.RegisterModel.TermsAndServices, null, new { @class = "text-danger d-block" })
                                    </div>
                                </div>
                            </fieldset>
                            <div class="form-group row">
                                <div class="col-lg-4">
                                    <button type="submit" class="btn btn-default">Registrarse</button>
                                </div>
                            </div>
                            @Html.ValidationMessage("CustomError", new { @class = "text-danger" })
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section account_signin {
        <script type="text/javascript">
            // extend range validator method to treat checkboxes differently
            var defaultRangeValidator = $.validator.methods.range;
            $.validator.methods.range = function (value, element, param) {
                if (element.type === 'checkbox') {
                    // if it's a checkbox return true if it is checked
                    return element.checked;
                } else {
                    // otherwise run the default validation function
                    return defaultRangeValidator.call(this, value, element, param);
                }
            }
        </script>
    }
