@model CVBuilder.ViewModels.Curriculum.FinishedViewModel
@using CVBuilder.Common
<link href="~/css/templates/classic.css" rel="stylesheet" />

<div class="col-auto page">
    <div class="row cv-header">
        <div class="col">
            <img class="img-fluid rounded-circle" src="@Model.PersonalDetails.Photo" />
            <p class="title">@Model.PersonalDetails.Name @Model.PersonalDetails.LastName</p>
            <p class="subtitle">@Model.PersonalDetails.Email @if (Model.PersonalDetails.LinePhone != null) { @Model.PersonalDetails.LinePhone } @if (Model.PersonalDetails.MobilePhone != null) { @Model.PersonalDetails.MobilePhone }</p>
            <p class="subtitle">
                @if (Model.PersonalDetails.FacebookUrl != null) {<i class="fab fa-facebook-square highlight"></i> @Model.PersonalDetails.FacebookUrl}
                @if (Model.PersonalDetails.LinkedInUrl != null) { <i class="fab fa-linkedin highlight"></i> @Model.PersonalDetails.LinkedInUrl}
                @if (Model.PersonalDetails.GithubUrl != null) { <i class="fab fa-github highlight"></i> @Model.PersonalDetails.GithubUrl}
                @if (Model.PersonalDetails.TwitterUrl != null) { <i class="fab fa-twitter highlight"></i> @Model.PersonalDetails.TwitterUrl}
            </p>
            <p class="subtitle">@if (Model.PersonalDetails.Location != null) { @(Model.PersonalDetails.Location) }
                @if (Model.PersonalDetails.WebPageUrl != null) { <i class="fas fa-globe-americas pl-1"></i> @Model.PersonalDetails.WebPageUrl}
            </p>
        </div>
    </div>
    @if (Model.PersonalDetails.SummaryIsVisible)
    {
        <div class="row cv-block">
            <div class="col-4">
                <h3 class="block-title text-uppercase">@(Model.PersonalDetails.SummaryCustomTitle ?? CurriculumGlobals.DEFAULT_SUMMARY_TITLE)</h3>
            </div>
            <div class="col-8">
                <p>@Model.PersonalDetails.Summary</p>
            </div>
        </div>
    }

    @if (Model.WorkExperiences.Count() > 0)
    {
        <div class="row">
            <div class="col">
                <h3 class="block-title text-uppercase">Experiencia laboral</h3>
                <hr class="mw-100 mt-0 mb-0" />
            </div>
        </div>
        foreach (var work in Model.WorkExperiences)
        {
            <div class="row cv-block">
                <div class="col-4">
                    <h5 class="block-subtitle font-weight-bold">@work.Company</h5>
                    <h5 class="block-subtitle">@work.City</h5>
                </div>
                <div class="col-8">
                    <h5 class="block-subtitle font-weight-bold">@work.Job</h5>
                    @if (work.StateInTime != string.Empty) {<h5 class="block-subtitle">@work.StateInTime</h5>}
                    @if (!string.IsNullOrWhiteSpace(work.Description)) { <p>@work.Description</p> }
                </div>
            </div>
        }
    }

    @if (Model.Certificates.Count() > 0)
    {
        <div class="row">
            <div class="col">
                <h3 class="block-title text-uppercase">Certificados - Cursos</h3>
                <hr class="mw-100 mt-0 mb-0" />
            </div>
        </div>
        foreach (var certificate in Model.Certificates)
        {
            <div class="row cv-block">
                <div class="col-4">
                    <h5 class="block-subtitle font-weight-bold">@certificate.Institute</h5>
                    @if (certificate.OnlineMode)
                    {
                        <h5 class="block-subtitle">@CurriculumGlobals.CERTIFICATE_ONLINE_TEXT</h5>
                    }
                    else
                    {
                        <h5 class="block-subtitle">@CurriculumGlobals.CERTIFICATE_CLASS_TEXT</h5>
                    }
                </div>
                <div class="col-8">
                    <h5 class="block-subtitle font-weight-bold">@certificate.Name</h5>
                    @if (certificate.InProgress)
                    {
                        <h5 class="block-subtitle">@CurriculumGlobals.CERTIFICATE_INPROGRESS_TEXT</h5>
                    }
                    else
                    {
                        <h5 class="block-subtitle">@certificate.Year</h5>
                    }

                    @if (!string.IsNullOrWhiteSpace(certificate.Description))
                    { <p>@certificate.Description</p> }
                </div>
            </div>
        }
    }

    @if (Model.Studies.Count() > 0)
    {
        <div class="row">
            <div class="col">
                <h3 class="block-title text-uppercase">Estudios</h3>
                <hr class="mw-100 mt-0 mb-0" />
            </div>
        </div>
        foreach (var study in Model.Studies)
        {
            <div class="row cv-block">
                <div class="col-4">
                    <h5 class="block-subtitle font-weight-bold">@study.Institute</h5>
                    <h5 class="block-subtitle">@study.City</h5>
                </div>
                <div class="col-8">
                    <h5 class="block-subtitle font-weight-bold">@study.Title</h5>
                    @if (study.StateInTime != string.Empty) {<h5 class="block-subtitle">@study.StateInTime</h5>}
                    @if (!string.IsNullOrWhiteSpace(study.Description)) { <p>@study.Description</p> }
                </div>
            </div>
        }
    }
    
    @if (Model.PersonalReferences.Count() > 0)
    {
        <div class="row">
            <div class="col">
                <h3 class="block-title text-uppercase">Referencias personales</h3>
                <hr class="mw-100 mt-0 mb-0" />
            </div>
        </div>
        foreach (var reference in Model.PersonalReferences)
        {
            <div class="row cv-block">
                <div class="col-4">
                    <h5 class="block-subtitle font-weight-bold">@reference.Company</h5>
                    @if (reference.PhoneNumber != null)
                    {
                        <h5 class="block-subtitle">@reference.PhoneNumber</h5>
                    }
                </div>
                <div class="col-8">
                    <h5 class="block-subtitle font-weight-bold">@reference.ContactPerson</h5>
                    <h5 class="block-subtitle">@reference.Email</h5>
                </div>
            </div>
        }
    }
    
    @if (Model.Languages.Count() > 0)
    {
        <div class="row cv-block">
            <div class="col-4">
                <h3 class="block-title text-uppercase">Idiomas</h3>
            </div>
            <div class="col-8">
                <p>
                    @{
                        List<string> text = new List<string>();
                        foreach (var language in Model.Languages)
                        {
                            text.Add(String.Concat(language.Name, " (", language.Level, ")"));
                        }
                        @String.Join(", ", text);
                    }
                </p>
            </div>
            </div>
    }
        
    @if (Model.Skills.Count() > 0)
    {
        <div class="row cv-block">
            <div class="col-4">
                <h3 class="block-title text-uppercase">Habilidades</h3>
            </div>
            <div class="col-8">
                <p>
                    @{
                        List<string> text = new List<string>();
                        foreach (var skill in Model.Skills)
                        {
                            text.Add(String.Concat(skill.Name, " (", skill.Level, ")"));
                        }
                        @String.Join(", ", text);
                    }
                </p>
            </div>
        </div>
    }
        
    @if (Model.Interests.Count() > 0)
    {
        <div class="row cv-block">
            <div class="col-4">
                <h3 class="block-title text-uppercase">Intereses</h3>
            </div>
            <div class="col-8">
                <p>
                    @{
                        List<string> text = new List<string>();
                        foreach (var interest in Model.Interests)
                        {
                            text.Add(interest.Name);
                        }
                        @String.Join(", ", text);
                    }
                </p>
            </div>
        </div>
    }

    @if (Model.CustomSections.Count() > 0)
    {
        foreach (var customSection in Model.CustomSections)
        {
            <div class="row cv-block">
                <div class="col-4">
                    <h3 class="block-title text-uppercase">@customSection.SectionName</h3>
                </div>
                <div class="col-8">
                    <p style="white-space: pre-wrap;">@customSection.Description</p>
                </div>
            </div>
        }
    }
</div>