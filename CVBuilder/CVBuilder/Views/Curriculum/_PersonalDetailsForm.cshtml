@model CVBuilder.ViewModels.Curriculum.PersonalDetailsViewModel
@using CVBuilder.Common

@using (Ajax.BeginForm("PersonalDetails", "Curriculum", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "successfulMessage", OnFailure = "onErrorSubmit" }, new { id = Model.FormId, enctype = "multipart/form-data" }))
{
    <fieldset>
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.PersonalDetailsID)
        @Html.HiddenFor(m => m.Type)
        <div class="row">
            <div class="col-lg-7">
                <div class="form-group">
                    <label>Nombre(s)</label>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Apellido(s)</label>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Profesión</label>
                    @Html.TextBoxFor(m => m.Profession, new { @class = "form-control" })
                    <small class="form-text text-muted">¿A qué se dedica?</small>
                </div>
            </div>
            <div class="col-lg-5">
                <div class="form-group text-center">
                    @Html.TextBoxFor(m => m.UploadedPhoto, new { type = "file", @class = "d-none" })
                    @if(Model.Photo != null){<button type="button" class="btn btn-outline-success profile-photo" style="background-image: url(@Model.Photo);"></button>}
                    else{<button type="button" class="btn btn-outline-success profile-photo"></button>}
                </div>
                @Html.ValidationMessageFor(m => m.UploadedPhoto, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div id="summary_wrapper" class="form-group">
                    <div id="custom_summary_title" class="col-lg-7 input-group mb-2 d-none">
                        @Html.TextBoxFor(m => m.SummaryCustomTitle, new { @class = "form-control form-control-sm", placeholder = "Nombre personalizado" })
                        <div class="input-group-append"><button id="change_summary_title" type="button" class="btn btn-sm btn-success" title="Cambiar"><i class="fas fa-check"></i></button></div>
                        <div class="input-group-append"><button id="cancel_summary_title" type="button" class="btn btn-sm btn-danger" title="Cancelar"><i class="fas fa-times"></i></button></div>
                    </div>
                    @Html.ValidationMessageFor(m => m.SummaryCustomTitle, null, new { @class = "text-danger" })
                    <div id="summary_title">
                        @if (Model.SummaryCustomTitle == null) {<label>@CurriculumGlobals.DEFAULT_SUMMARY_TITLE</label>} else {<label>@Model.SummaryCustomTitle</label>}
                        <button id="rename_title" type="button" class="btn btn-sm btn-outline-info"><i class="fas fa-pencil-alt"></i> Editar</button>
                    </div>
                    @Html.TextAreaFor(m => m.Summary, new { @class = "form-control", rows = "3", placeholder = "Máximo 300 caracteres..." })
                    @Html.ValidationMessageFor(m => m.Summary, null, new { @class = "text-danger" })
                    <div class="col-lg-5 custom-control custom-switch">
                        @Html.CheckBoxFor(m => m.SummaryIsVisible, new { @class = "custom-control-input" })
                        <label class="custom-control-label" for="SummaryIsVisible">Visible</label>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Correo electrónico</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Teléfono fijo</label>
                    <div class="row">
                        <div class="input-group col-lg-5">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><b>+</b></span>
                            </div>
                            @Html.TextBoxFor(m => m.AreaCodeLP, new { @class = "form-control", placeholder = "Cod. área" })
                            @Html.ValidationMessageFor(m => m.AreaCodeLP, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-7">
                            @Html.TextBoxFor(m => m.LinePhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LinePhone, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Teléfono celular</label>
                    <div class="row">
                        <div class="input-group col-lg-5">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><b>+</b></span>
                            </div>
                            @Html.TextBoxFor(m => m.AreaCodeMP, new { @class = "form-control", placeholder = "Cod. área" })
                            @Html.ValidationMessageFor(m => m.AreaCodeMP, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-7">
                            @Html.TextBoxFor(m => m.MobilePhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MobilePhone, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Dirección</label>
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Ciudad / localidad</label>
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.City, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Código postal</label>
                    @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PostalCode, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Nacionalidad</label>
                    @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Country, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Páginas web</label>
                    @Html.TextBoxFor(m => m.WebPageUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.WebPageUrl, null, new { @class = "text-danger" })
                    <small class="form-text text-muted">Si hay más de uno, separar con coma.</small>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>LinkedIn</label>
                    @Html.TextBoxFor(m => m.LinkedInUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LinkedInUrl, null, new { @class = "text-danger" })
                    <small class="form-text text-muted">Si hay más de uno, separar con coma.</small>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Github</label>
                    @Html.TextBoxFor(m => m.GithubUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.GithubUrl, null, new { @class = "text-danger" })
                    <small class="form-text text-muted">Si hay más de uno, separar con coma.</small>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Facebook</label>
                    @Html.TextBoxFor(m => m.FacebookUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FacebookUrl, null, new { @class = "text-danger" })
                    <small class="form-text text-muted">Si hay más de uno, separar con coma.</small>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleInputPassword1">Twitter</label>
                    @Html.TextBoxFor(m => m.TwitterUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TwitterUrl, null, new { @class = "text-danger" })
                    <small class="form-text text-muted">Si hay más de uno, separar con coma.</small>
                </div>
            </div>
        </div>
    </fieldset>
    <hr />
    <div class="row">
        <div class="col text-center">
            <button type="submit" class="btn btn-block btn-success">Guardar cambios</button>
        </div>
    </div>
}